import React, { useEffect, useState } from 'react';

const TelegramUserIdDisplay = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è User ID, —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–æ–∫
  const [userId, setUserId] = useState(null);
  const [firstName, setFirstName] = useState(null); // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –¥–æ–±–∞–≤–∏–º –∏–º—è –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –ª–æ–≥–∏ (–ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ –≤—Å–µ –∂–µ —É–¥–∞—Å—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫ –Ω–∏–º –¥–æ—Å—Ç—É–ø)
  console.log('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç TelegramUserIdDisplay —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è.');

  useEffect(() => {
    console.log('useEffect –∑–∞–ø—É—â–µ–Ω –≤ TelegramUserIdDisplay.');

    const fetchData = async () => {
      console.log('fetchData –∑–∞–ø—É—â–µ–Ω–∞.');
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram Web App API
        if (!window.Telegram?.WebApp) {
          console.log('Telegram Web App API –ù–ï –æ–±–Ω–∞—Ä—É–∂–µ–Ω.');
          setError("Telegram Web App API –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∏–µ–Ω—Ç–∞ Telegram.");
          setLoading(false); // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π
          return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        }

        const webApp = window.Telegram.WebApp;
        console.log('Telegram Web App API –Ω–∞–π–¥–µ–Ω.', webApp);

        // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –µ–≥–æ
        webApp.ready();
        webApp.expand();
        console.log('webApp.ready() –∏ webApp.expand() –≤—ã–∑–≤–∞–Ω—ã.');

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º initDataUnsafe –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ)
        const initDataUnsafe = webApp.initDataUnsafe;
        console.log('initDataUnsafe:', initDataUnsafe);

        // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ initDataUnsafe
        const user = initDataUnsafe?.user;
        console.log('–ü–æ–ª—É—á–µ–Ω –æ–±—ä–µ–∫—Ç user:', user);

        if (user && user.id !== undefined) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ user —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å id
          console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–π–¥–µ–Ω—ã, ID:', user.id);
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          setUserId(user.id);
          setFirstName(user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
          // ... (–º–µ—Å—Ç–æ –¥–ª—è –±—ç–∫–µ–Ω–¥ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ initData) ...
        } else {
          console.log('–û–±—ä–µ–∫—Ç user –∏–ª–∏ user.id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ initDataUnsafe.');
          setError("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID) –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å Telegram Bot.");
        }

      } catch (err) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –æ—à–∏–±–æ–∫ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
        console.error("–û—à–∏–±–∫–∞ –≤ fetchData:", err);
        setError("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + err.message);
      } finally {
        // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        console.log('fetchData –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ loading –≤ false.');
        setLoading(false);
      }
    };

    fetchData(); // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  // --- –õ–æ–≥–∏–∫–∞ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ---

  // 1. –ï—Å–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞
  if (loading) {
    console.log('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –ó–∞–≥—Ä—É–∑–∫–∞...');
    return <div style={{ padding: '20px', textAlign: 'center' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...</div>;
  }

  // 2. –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
  if (error) {
     console.log('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –û—à–∏–±–∫–∞:', error);
    return <div style={{ padding: '20px', color: 'red', textAlign: 'center' }}>–û—à–∏–±–∫–∞: {error}</div>;
  }

  // 3. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID) —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã
  if (userId !== null) {
     console.log('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: User ID –¥–æ—Å—Ç—É–ø–µ–Ω.');
      return (
          <div style={{ fontFamily: 'sans-serif', padding: '20px', maxWidth: '500px', margin: 'auto', border: '1px solid #ccc', borderRadius: '8px', boxShadow: '2px 2px 10px rgba(0,0,0,0.1)' }}>
              <h2 style={{ textAlign: 'center', color: '#0088CC' }}>–ü—Ä–∏–≤–µ—Ç, {firstName}! üëã</h2>
              <p style={{ fontSize: '1.2em', textAlign: 'center' }}>
                  –í–∞—à Telegram User ID: <br/>
                  <strong style={{ color: '#333' }}>{userId}</strong>
              </p>
               <p style={{ fontSize: '0.9em', color: '#666', marginTop: '20px' }}>
                   <small>User ID –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ Telegram Web App API.
                   <br/>
                   –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (initData).</small>
               </p>
          </div>
      );
  }

  // 4. –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–µ—Ç –æ—à–∏–±–∫–∏, –Ω–æ User ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∫—Ä–∞–π–Ω–µ —Ä–µ–¥–∫–∏–π —Å–ª—É—á–∞–π –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–µ)
   console.log('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∏, –Ω–µ—Ç –æ—à–∏–±–∫–∏, –Ω–µ—Ç User ID).');
  return (
      <div style={{ padding: '20px', textAlign: 'center' }}>
          –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
      </div>
  );
};

export default TelegramUserIdDisplay;