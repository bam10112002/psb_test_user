import React, { useEffect, useState } from 'react';

const TelegramUserIdDisplay = () => {
  const [userId, setUserId] = useState(null);
  const [firstName, setFirstName] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –ª–æ–≥–∏
  console.log('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç TelegramUserIdDisplay —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è.');

  useEffect(() => {
    console.log('useEffect –∑–∞–ø—É—â–µ–Ω –≤ TelegramUserIdDisplay.');

    const fetchData = async () => {
      console.log('fetchData –∑–∞–ø—É—â–µ–Ω–∞.');
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram Web App API (—Ç–µ–ø–µ—Ä—å –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å!)
        if (!window.Telegram?.WebApp) {
           // –≠—Ç–æ—Ç –±–ª–æ–∫ —Ç–µ–ø–µ—Ä—å, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –Ω–µ –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è
           console.log('Telegram Web App API –ù–ï –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ!).');
           setError("Telegram Web App API –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∏–µ–Ω—Ç–∞ Telegram.");
           setLoading(false);
           return;
        }

        const webApp = window.Telegram.WebApp;
        console.log('Telegram Web App API –Ω–∞–π–¥–µ–Ω.', webApp);

        webApp.ready();
        webApp.expand();
        console.log('webApp.ready() –∏ webApp.expand() –≤—ã–∑–≤–∞–Ω—ã.');

        // --- –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ initDataUnsafe ---
        const initDataUnsafe = webApp.initDataUnsafe;
        console.log('=== –°–æ–¥–µ—Ä–∂–∏–º–æ–µ webApp.initDataUnsafe: ===');
        console.log(initDataUnsafe); // –õ–æ–≥–∏—Ä—É–µ–º –≤–µ—Å—å –æ–±—ä–µ–∫—Ç
        console.log('=== –ö–æ–Ω–µ—Ü initDataUnsafe ===');

        // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = initDataUnsafe?.user;
        console.log('–ü–æ–ª—É—á–µ–Ω –æ–±—ä–µ–∫—Ç user:', user);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ user —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å id
        if (user && user.id !== undefined) {
          console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–π–¥–µ–Ω—ã, ID:', user.id);
          setUserId(user.id);
          setFirstName(user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
          // ... (–º–µ—Å—Ç–æ –¥–ª—è –±—ç–∫–µ–Ω–¥ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ initData) ...
        } else {
          console.log('–û–±—ä–µ–∫—Ç user –∏–ª–∏ user.id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ initDataUnsafe.');
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É, —É–∫–∞–∑—ã–≤–∞—é—â—É—é –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          setError("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID) –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å Telegram Bot.");
          // --- –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª–µ–π initDataUnsafe, –µ—Å–ª–∏ –æ–Ω–∏ –Ω—É–∂–Ω—ã ---
          // console.log('initDataUnsafe.query_id:', initDataUnsafe?.query_id);
          // console.log('initDataUnsafe.start_param:', initDataUnsafe?.start_param);
          // –∏ —Ç.–¥.
          // ---------------------------------------------------------------------
        }

      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –≤ fetchData:", err);
        setError("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + err.message);
      } finally {
        console.log('fetchData –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ loading –≤ false.');
        setLoading(false);
      }
    };

    fetchData();

  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  // --- –õ–æ–≥–∏–∫–∞ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–π) ---

  if (loading) {
    return <div style={{ padding: '20px', textAlign: 'center' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...</div>;
  }

  if (error) {
    return <div style={{ padding: '20px', color: 'red', textAlign: 'center' }}>–û—à–∏–±–∫–∞: {error}</div>;
  }

  if (userId !== null) {
      return (
          <div style={{ fontFamily: 'sans-serif', padding: '20px', maxWidth: '500px', margin: 'auto', border: '1px solid #ccc', borderRadius: '8px', boxShadow: '2px 2px 10px rgba(0,0,0,0.1)' }}>
              <h2 style={{ textAlign: 'center', color: '#0088CC' }}>–ü—Ä–∏–≤–µ—Ç, {firstName}! üëã</h2>
              <p style={{ fontSize: '1.2em', textAlign: 'center' }}>
                  –í–∞—à Telegram User ID: <br/>
                  <strong style={{ color: '#333' }}>{userId}</strong>
              </p>
               <p style={{ fontSize: '0.9em', color: '#666', marginTop: '20px' }}>
                   <small>User ID –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ Telegram Web App API.
                   <br/>
                   –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (initData).</small>
               </p>
          </div>
      );
  }

  return (
      <div style={{ padding: '20px', textAlign: 'center' }}>
          –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
      </div>
  );
};

export default TelegramUserIdDisplay;